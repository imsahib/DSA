//implimentation of a singular linked list
#include<stdio.h>
struct node
{
    int value;
    struct node *ptr;
};
struct node *start=NULL;
struct node* createNode()
{
    struct node *temp;
    temp=(struct node*)(malloc(sizeof(struct node))); // we will look at this later
    return temp;
}
void EnQueue()
{
    struct node *temp,*p;
   temp=createNode();
   printf("Enter Number To Be Inserted\n");
   scanf("%d",&temp->value);
   temp->ptr=NULL;
   if(start==NULL)
        start=temp;
   else
   {
       p=start;
       while(p->ptr!=NULL)
            p=p->ptr;
        p->ptr=temp;
   }

}
void DeQueue()
{
    struct node *temp;
    if (start==NULL)
        printf("list is Empty");
    else
    {
        temp=start;
        start=start->ptr;
        free(temp);
    }


}
void showList()
{
    struct node *temp;
    if(start==NULL)
        printf("List is Empty");
    else
    {
        temp=start;
        while(temp!=NULL)
            {
                printf("%d\n",temp->value);
                temp=temp->ptr;
            }

    }
}
void main()
{
    int choice,val,i;
    cout<<endl<<"1.Enqueue";
    cout<<endl<<"2.Dequeue";
    cout<<endl<<"3.IS EMPTY";
    cout<<endl<<"4.LENGTH";
    cout<<endl<<"5.VIEW LIST";
    cout<<endl<<"6.EXIT";
    while(1)
    {
        cout<<endl<<"Enter your choice\n";
        cin>>choice;
        switch(choice)
        {
            case 1:
                cout<<"Enter Value"<<endl;
                cin>>val;
                l1.insertAtTail(val);
                break;
            case 2:
                l1.deleteAtHead();
                break;
            case 3:
                i=l1.isEmpty();
                if(i==1)
                    cout<<"yes"<<endl;
                else
                    cout<<"no"<<endl;
                break;
            case 4:
                cout<<endl<<l1.length();
                break;
            case 5:
                l1.viewlist();
                break;
            case 6:
                exit(0);
            default:
            cout<<"Invalid Input"<<endl;

        }
    }

}

