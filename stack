#include<stdio.h>
struct stack
{
    int top;
    int capacity;
    int*array;
};
struct stack* CreateStack(int cap)
{
    struct stack *ptr;
    ptr=malloc(sizeof(struct stack));
    ptr->top=-1;
    ptr->capacity=cap;
    ptr->array= malloc(ptr->capacity*sizeof(int));
    return ptr;
}
int isEmpty(struct stack *ptr)
{
    if(ptr->top==-1)
        return 1;
    else
        return 0;
}
int isFull(struct stack *ptr)
{
    if(ptr->top==(ptr->capacity)-1)
        return 1;
    else
        return 0;
}
void push(struct stack *ptr,int value)
{

    if(!isFull(ptr))
    {
        ptr->top++;
        ptr->array[ptr->top]=value;
    }
    else
        printf("Stack is Full");

}
int pop(struct stack *ptr)
{
    int value;
    if (!isEmpty(ptr))
    {
       value=ptr->array[ptr->top];
       ptr->top--;
       return value;
    }
    else
    return -1;
}
void main()
{
    int choice,val,i;
    struct CreateStack *ptr;
    ptr=CreateStack(5);
    while(1)
    {
        printf("1. ENTER VALUE \n");
        printf("2. DELETE VALUE \n");
        printf("3. Exit\n");
        printf("Enter your choice\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case1:
                printf("Enter Number");
                scanf("%d",&val);
                push(ptr,val);
                break;
        case 2:
            i= pop(ptr);
            if(i==-1)
                printf("Stack is Empty");
            else
                printf("poped value is %d",i);
                break;
        case 3:
            exit(0);

        }
    getch();
    }
}
