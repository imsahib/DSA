// practise

#include <stdio.h>
void merge(int[],int[],int,int);
void merge_sort(int[],int,int);
void main()
{
    int i,arr1[]={2,3,5,8,19};
    int arr2[]={1,4,6,10,12,17,20};
    printf("\nBefore merge ARRAY 1\n");
    for(i=0;i<5;i++)
        printf("%d ",arr1[i]);
    printf("\nBefore merge ARRAY 2\n");
    for(i=0;i<7;i++)
        printf("%d ",arr2[i]);
    merge(arr1,arr2,5,7);
    merge_sort(arr1,0,4);
}
void merge(int arr1[],int arr2[],int arr_size1,int arr_size2)
{
    int i=0,j=0,k=0;
    int m= arr_size1+arr_size2;
    int merge_arr[m];
    int s=arr_size1-arr_size2;
    if(s<0){s=-s;}
    while(i!=arr_size1 && j!=arr_size2)
    {
        if(arr1[i]<arr2[j])
        {
            merge_arr[k]=arr1[i];
            i++;
        }
        else
        {
            merge_arr[k]=arr2[j];
            j++;
        }
        k++;
    }
    if(i==arr_size1 && s>0)
    {
         while(j<arr_size2)
         {
           
            merge_arr[k]=arr2[j];
            j++; k++;
         }
    }
   else if(j==arr_size2 && s>0)
    {
        while(i<arr_size1)
         {
           
            merge_arr[k]=arr1[i];
            i++; k++;
         }
        
    }
    printf("\nAFTER MERGE\n");
    for(i=0;i<m;i++)
        printf("%d ",merge_arr[i]);
}
void merge_sort(int arr[],int lb,int ub)
{
    // Divde and conquer technique
     if(lb<ub)
     {
        mid=(lb+ub)/2;
        merge_sort(arr,lb,mid);
        merge_sort(arr,mid+1,ub);
        merging(arr,lb,mid,ub);
     }

}
void merging(int arr[],int lb,int mid,int ub)
{
    int i,j,k;
    i=lb;
    j=mid+1;
    k=lb;
    while(i<=mid && j<=ub)
    {
        if(arr[i]<=arr[j])
        {
            b[k]=arr[i];
            i++;
        }
        else
        {
            b[k]=arr[j];
            j++;
        }
        else
        {
            b[k]=arr[j];
            j++;
        }
        k++;
    }
    if(i>mid)
    {
        while(j<=ub)
        {
            b[k]=arr[j];
            j++;
            k++;
        }
    }
    else
    {
        while(i<=mid)
        {
            b[k]=a[i];
            i++;
            k++;
        }

    }
    for(k=lb;k<=ub;k++)
        arr[k]=b[k];
}
